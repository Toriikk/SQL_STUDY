-- DEPT 테이블 정보를 부서명, 지역, 부서번호 내림차순으로 정렬해서 출력
-- CASE 1. 칼럼명 사용 ORDER BY 절 사용
SELECT DNAME, LOC, DEPTNO
FROM DEPT
ORDER BY DNAME, LOC, DEPTNO DESC;

-- CASE 2. 칼럼명 + ALIAS 명 사용 ORDER BY 절 사용
SELECT DNAME AS DEPT, LOC AS AREA, DEPTNO
FROM DEPT
ORDER BY DNAME, AREA, DEPTNO DESC;

-- CASE 3. 칼럼 순서번호 + ALIAS 명 사용 ORDER BY 절 사용
SELECT DNAME, LOC AS AREA, DEPTNO
FROM DEPT
ORDER BY 1, AREA, 3 DESC;

-- SELECT 절에 없는 MGR 칼럼을 ORDER BY 절에 사용
SELECT EMPNO, ENAME
FROM EMP
ORDER BY MGR;

-- 인라인 뷰에 정의된 SELECT 칼럼을 메인 쿼리에서 사용
SELECT EMPNO
FROM (SELECT EMPNO, ENAME FROM EMP ORDER BY MGR);

-- GROUP BY 절 사용시 SELECT 절에 일반 칼럼을 사용
SELECT JOB, SAL
FROM EMP
GROUP BY JOB
HAVING COUNT (*) > 0
ORDER BY SAL;
-- 결과 : 오류 발생, GROUP BY 표현식이 아닙니다. 

-- GROUP BY 절 사용시 ORDER BY 절에 일반 칼럼을 사용
SELECT JOB
FROM EMP
GROUP BY JOB 
HAVING COUNT (*) > 0
ORDER BY SAL;
-- 결과 : 오류 발생, GROUP BY 표현식이 아닙니다.

--GROUP BY 절 사용시 ORDER BY 절에 집계 칼럼을 사용
SELECT JOB, SUM(SAL) AS SALARY_SUM
FROM EMP
GROUP BY JOB
HAVING SUM (SAL) > 5000
ORDER BY SUM (SAL);

-- 선수 테이블과 팀 테이블에서 선수 이름과 소속된 팀의 이름을 출력하시오
SELECT PLAYER.PLAYER_NAME AS 선수명, TEAM.TEAM_NAME AS 소속팀명
FROM PLAYER, TEAM
WHERE TEAM.TEAM_ID = PLAYER.TEAM_ID;

-- 사진과 같은 데이터를 출력하기 위한 SELECT SQL 문장 작성
SELECT PLAYER.PLAYER_NAME, PLAYER.BACK_NO, PLAYER.TEAM_ID,
        TEAM.TEAM_NAME, TEAM.REGION_NAME
FROM PLAYER, TEAM
WHERE TEAM.TEAM_ID = PLAYER.TEAM_ID;

-- 칼럼과 테이블에 ALIAS 적용해 위 SQL 수정 
SELECT A.PLAYER_NAME 선수명, A.BACK_NO 백넘버, A.TEAM_ID 팀코드,
       B.TEAM_NAME 팀명, B.REGION_NAME 연고지
FROM PLAYER A, TEAM B
WHERE B.TEAM_ID = A.TEAM_ID;
-- 실행결과는 ALIAS 적용 전과 동일